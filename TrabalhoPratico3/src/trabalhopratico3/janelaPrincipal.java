/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalhopratico3;

import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author Matheus
 */
public class janelaPrincipal extends javax.swing.JFrame {
    private ModeloTabela modeloTab;

    /**
     * Creates new form janelaPrincipal
     */
    public janelaPrincipal() {
        initComponents();
        meuInitComponents();
    }
    
    private void meuInitComponents(){
        this.modeloTab = new ModeloTabela();
        tabela.setModel(modeloTab);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adicionarBtn = new javax.swing.JButton();
        limparBtn = new javax.swing.JButton();
        nometxt = new javax.swing.JTextField();
        valorAtualtxt = new javax.swing.JTextField();
        datatxt = new javax.swing.JFormattedTextField();
        hojecb = new javax.swing.JCheckBox();
        repetirAportecb = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        aportetxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Carteira de Investimentos do Seu Jos√©");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Aporte:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Data Aporte");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Valor Atual:");

        adicionarBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adicionarBtn.setText("Adicionar");
        adicionarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarBtnActionPerformed(evt);
            }
        });

        limparBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        limparBtn.setText("Limpar");
        limparBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBtnActionPerformed(evt);
            }
        });

        nometxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nometxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nometxtKeyTyped(evt);
            }
        });

        valorAtualtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valorAtualtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorAtualtxtKeyTyped(evt);
            }
        });

        try {
            datatxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datatxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        datatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                datatxtKeyTyped(evt);
            }
        });

        hojecb.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        hojecb.setText("hoje?");
        hojecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hojecbActionPerformed(evt);
            }
        });

        repetirAportecb.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        repetirAportecb.setText("repetir aporte?");
        repetirAportecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repetirAportecbActionPerformed(evt);
            }
        });

        tabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "V. Aporte", "Data", "V.Atual", "Lucro", "Retorno (%)"
            }
        ));
        tabela.setToolTipText("");
        tabela.setRowHeight(25);
        jScrollPane1.setViewportView(tabela);

        aportetxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        aportetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aportetxtKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(nometxt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(aportetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(adicionarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(limparBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorAtualtxt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(repetirAportecb)
                    .addComponent(hojecb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nometxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(aportetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hojecb))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(valorAtualtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(repetirAportecb))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adicionarBtn)
                            .addComponent(limparBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void adicionarInvestimento(){
        String nome = nometxt.getText();
        String aporte = aportetxt.getText();
        String data = datatxt.getText();
        String valorAtual = valorAtualtxt.getText();
        
        if(nome.isEmpty() || aporte.isEmpty() || data.equals("  /  /    ") || valorAtual.isEmpty()){            
            JOptionPane.showMessageDialog(null, "Todos os campos precisam estar preenchidos corretamente.", "Erro", JOptionPane.ERROR_MESSAGE);
            
        }else{
            if(aporte.contains(",")){
                aporte=aporte.replaceAll(",", ".");
                
            }
            if(valorAtual.contains(",")){
                valorAtual=valorAtual.replaceAll(",", ".");
            }
            try{               
                if(verificarData(data)){
                    Investimentos novo = new Investimentos(nome, Double.parseDouble(aporte), Double.parseDouble(valorAtual), 0, 0, data);
                    modeloTab.addInvestimento(novo);
                    tabela.updateUI();
                    //Apaga todos os campos de formul√°rio
                    limparCampos();

                }else{
                    JOptionPane.showMessageDialog(null, "A data deve ser um valor v√°lido", "Erro", JOptionPane.ERROR_MESSAGE);
                }
                    
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "O campo de Aporte e Valor atual deve ser um n√∫mero", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }
    }
    
    private void adicionarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarBtnActionPerformed
        adicionarInvestimento();
    }//GEN-LAST:event_adicionarBtnActionPerformed

    //Verifica a data a partir de v√°rias possibilidades
    private boolean verificarData(String d){
        String dataStr[]=d.split("/");
        int dia=Integer.parseInt(dataStr[0]);
        int mes=Integer.parseInt(dataStr[1]);
        int ano=Integer.parseInt(dataStr[2]);
        
        if(mes>12){
            return false;
        }else{
            if(((mes==1 || mes==3 || mes==7 || mes==8 || mes==10 || mes==12) && dia>31) ||  ((mes==4 || mes==6 || mes==9 || mes==11) && dia>30) || (mes==2 && dia>28 && ano%2!=0) || (mes==2 && dia>29 && ano%2==0)){
                return false;
            }
            else{
                return true;
            }
        }
    }
    
    //Marca ou desmarca a data atual no campo de data
    private void hojecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hojecbActionPerformed
        if(hojecb.isSelected()){
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate hoje = LocalDate.now();
            datatxt.setText(""+hoje.format(formato));
        }else{
            datatxt.setText("");
        }
        
    }//GEN-LAST:event_hojecbActionPerformed

    //Limpa todos os campos
    private void limparBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBtnActionPerformed
        limparCampos();
    }//GEN-LAST:event_limparBtnActionPerformed

    //Coloca o valor atual como valor do aporte
    private void repetirAportecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repetirAportecbActionPerformed
        String aporte = aportetxt.getText();
            
        if(repetirAportecb.isSelected() && !aporte.isEmpty()){
            valorAtualtxt.setText(aporte);
        }else{
            valorAtualtxt.setText("");
        }
        
    }//GEN-LAST:event_repetirAportecbActionPerformed

    private void nometxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nometxtKeyTyped
        //Muda o foco para o pr√≥ximo campo de texto
        if(evt.getKeyChar() == '\n'){
            aportetxt.grabFocus();
        }
    }//GEN-LAST:event_nometxtKeyTyped

    private void aportetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aportetxtKeyTyped
        //Muda o foco para o pr√≥ximo campo de texto
        if(evt.getKeyChar() == '\n'){
            datatxt.grabFocus();
        }
    }//GEN-LAST:event_aportetxtKeyTyped

    private void datatxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datatxtKeyTyped
        //Muda o foco para o pr√≥ximo campo de texto
        if(evt.getKeyChar() == '\n'){
            valorAtualtxt.grabFocus();
        }
    }//GEN-LAST:event_datatxtKeyTyped

    private void valorAtualtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorAtualtxtKeyTyped
        //Vai para o m√©todo para adicionarInvestimento um novo investimento
        if(evt.getKeyChar() == '\n'){
            adicionarInvestimento();
        }
    }//GEN-LAST:event_valorAtualtxtKeyTyped

    //Apaga todos os campos de formul√°rio
    private void limparCampos(){
        nometxt.setText("");
        aportetxt.setText("");
        datatxt.setText("");
        valorAtualtxt.setText("");
        hojecb.setSelected(false);
        repetirAportecb.setSelected(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(janelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(janelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(janelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(janelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new janelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarBtn;
    private javax.swing.JTextField aportetxt;
    private javax.swing.JFormattedTextField datatxt;
    private javax.swing.JCheckBox hojecb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparBtn;
    private javax.swing.JTextField nometxt;
    private javax.swing.JCheckBox repetirAportecb;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField valorAtualtxt;
    // End of variables declaration//GEN-END:variables
}
